{"version":3,"sources":["../src/routes/home/StateModel.tsx","../src/generated/apollo.tsx","../src/routes/home/UsaMap.tsx","../src/routes/home/contributors/Contributor.tsx","../src/routes/home/Contributors.tsx","../src/routes/Home.tsx","../src/routes/index.tsx","../src/theme.ts","../src/withApollo.tsx","../src/index.tsx","serviceWorker.ts","App.tsx","index.tsx"],"names":["StateModal","props","title","state","isOpen","schoolsByState","length","onDismiss","p","fontFamily","map","school","fontSize","mb","textAlign","name","activitiesInfo","activities_info","activityInfo","fontStyle","activity","details","renderSchools","defaultProps","ContributorsDocument","gql","React","SchoolsDocument","colorHash","ColorHash","UsaMap","_props","baseOptions","schoolsData","ReactApolloHooks","data","useState","setSchoolsByState","setState","justifyContent","width","m","scheme","window","innerWidth","document","documentElement","clientWidth","body","customize","reduce","fill","hex","JSON","stringify","getCustomize","onClick","e","schools","filter","target","dataset","Contributor","ml","mr","photo","src","style","borderRadius","maxWidth","maxHeight","bio","href","homepage","Contributors","contributorsData","mt","flexWrap","contributor","pl","pr","renderContributors","Home","Routes","path","primer","config","client","ApolloClient","link","ApolloLink","from","onError","graphQLErrors","networkError","forEach","message","locations","console","log","HttpLink","uri","cache","InMemoryCache","App","theme","withApollo","Boolean","location","hostname","match","ReactGA","initialize","pageview","pathname","search","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gOAgBMA,EAAkC,SAACC,GAA4B,IAAD,EA0BlE,OACE,kBAAC,IAAD,CACEC,MAAOD,EAAME,MACbC,UAAS,UAACH,EAAMI,sBAAP,aAAC,EAAsBC,QAChCC,UAAWN,EAAMM,WAEjB,kBAAC,IAAD,CAAKC,EAAG,GACN,kBAAC,IAAD,CAAMC,WAAW,cArBvB,WAA0B,IAAD,EACvB,iBAAOR,EAAMI,sBAAb,aAAO,EAAsBK,KAAI,SAACC,GAAD,OAC/B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,SAAU,EAAGC,GAAI,EAAGC,UAAU,UAAvC,OACGH,QADH,IACGA,OADH,EACGA,EAAQI,MAbjB,QAFAC,GAiB8B,OAANL,QAAM,IAANA,OAAA,EAAAA,EAAQM,kBAAmB,UAfnD,IAAOD,OAAP,EAAOA,EAAgBN,KAAI,SAACQ,GAAD,aACzB,kBAAC,IAAD,CAAML,GAAI,GACR,kBAAC,IAAD,CAAMM,UAAU,UAAhB,OAA0BD,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAcE,gBAAxC,aAA0B,EAAwBL,KAAlD,MADF,OAEGG,QAFH,IAEGA,OAFH,EAEGA,EAAcG,YAab,kBAAC,IAAD,CAAKR,GAAI,MAnBjB,IACEG,KA+BmCM,OAMvCtB,EAAWuB,aAAe,CACxBnB,QAAQ,EACRG,UAAW,aACXF,eAAgB,GAChBF,MAAO,IAGMH,Q,gkBCsBR,IAAMwB,EAAuBC,IAAH,KAaUC,YAyCpC,IAAMC,EAAkBF,IAAH,KAgBUC,YClJtC,IAAME,EAAY,IAAIC,IAIhBC,EAA0B,SAACC,GAAyB,IAAD,QDgLvDC,EC/KMC,EDiLCC,IACLP,EACAK,GCnL+BG,KADsB,EAEXC,mBAE1C,MAJqD,mBAEhD/B,EAFgD,KAEhCgC,EAFgC,OAK7BD,mBAAS,IALoB,mBAKhDjC,EALgD,KAKzCmC,EALyC,KA8BvD,OACE,oCACE,kBAAC,IAAD,CAAMC,eAAe,UACnB,kBAAC,IAAD,CAAMC,MAAO,KACX,kBAAC,IAAD,CACEC,EAAG,EACHC,QAAmB,OAAXT,QAAW,IAAXA,GAAA,UAAAA,EAAatB,cAAb,mBAAqBwB,YAArB,eAA2B7B,QAAS,QAAU,QAE1C,OAAX2B,QAAW,IAAXA,GAAA,UAAAA,EAAatB,cAAb,mBAAqBwB,YAArB,eAA2B7B,QACxB,oBACA,wBAIV,kBAAC,IAAD,CACEkC,MACEG,OAAOC,YACPC,SAASC,gBAAgBC,aACzBF,SAASG,KAAKD,YAEhBE,UAjCN,WAA0C,IAAD,EACvC,OAAKhB,IACc,OAAXA,QAAW,IAAXA,GAAA,UAAAA,EAAatB,cAAb,eAAqBwB,OAAQ,IAAIe,QACvC,SAACD,EAA4BtC,GAI3B,OAHAsC,GAAgB,OAANtC,QAAM,IAANA,OAAA,EAAAA,EAAQR,QAAS,IAAM,CAC/BgD,KAAMvB,EAAUwB,IAAIC,KAAKC,UAAU3C,KAE9BsC,IAET,IARuB,GAgCVM,GACXC,QA5CN,SAAqBC,GAAS,IAAD,IAC3B,IAAKxB,EAAa,OAAO,KACzB,IAAMyB,GACJ,UAAAzB,EAAYtB,cAAZ,mBAAoBwB,YAApB,eAA0BwB,QACxB,SAAChD,GAAD,OAAsC,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQR,SAAUsD,EAAEG,OAAOC,QAAQ9C,UAChE,KACPsB,EAAkBqB,GAClBpB,EAASmB,EAAEG,OAAOC,QAAQ9C,SAuCxB,kBAAC,EAAD,CACEX,UAAS,OAACC,QAAD,IAACA,OAAD,EAACA,EAAgBC,QAC1BC,UAAW,kBAAM8B,EAAkB,OACnChC,eAAgBA,GAAkB,GAClCF,MAAOA,GAAS,KAElB,kBAAC,IAAD,CAAKU,GAAI,MAKfiB,EAAOP,aAAe,GAEPO,QCnETgC,EAAoC,SAAC7D,GAazC,OACE,kBAAC,IAAD,CAAKY,GAAI,GAAIkD,GAAI,EAAGC,GAAI,GAZnB/D,EAAMgE,MAET,kBAAC,IAAD,CAAM1B,eAAe,SAAS1B,GAAI,IAChC,yBACEqD,IAAKjE,EAAMgE,MACXE,MAAO,CAAEC,aAAc,OAAQC,SAAU,IAAKC,UAAW,QALtC,KAcvB,kBAAC,IAAD,CAASxD,UAAU,SAASF,SAAU,EAAGC,GAAI,GAC1CZ,EAAMc,MAET,kBAAC,IAAD,CAASD,UAAU,SAASF,SAAU,EAAGC,GAAI,GAC1CZ,EAAMC,OAET,kBAAC,IAAD,CAAMY,UAAU,UACd,kBAAC,IAAD,KAAOb,EAAMsE,KACb,kBAAC,IAAD,CAAK1D,GAAI,IACT,kBAAC,IAAD,CAAM2D,KAAMvE,EAAMwE,SAAUb,OAAO,SAAS/C,GAAI,GAC9C,kBAAC,IAAD,CAASD,SAAU,EAAGE,UAAU,UAC7Bb,EAAMwE,cAQnBX,EAAYvC,aAAe,CACzBgD,IAAK,GACLE,SAAU,GACVR,MAAO,GACP/D,MAAO,IAGM4D,QCHAY,EAvC6B,SAAC3C,GAC3C,IHuHAC,EGvHM2C,EHyHCzC,IACLV,EACAQ,GG3HyCG,KAuB3C,OACE,kBAAC,IAAD,CAAMI,eAAe,UACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAS3B,SAAU,EAAGgE,GAAI,EAAG/D,GAAI,EAAGC,UAAU,UAA9C,gBAIA,kBAAC,IAAD,CAAMyB,eAAe,SAASsC,SAAS,OAAOhE,GAAI,GAChD,kBAAC,IAAD,CAAMwD,SAAU,KA7BxB,WAA+B,IAAD,MAC5B,OAAI,OAACM,QAAD,IAACA,GAAD,UAACA,EAAkBG,mBAAnB,iBAAC,EAA+B3C,YAAhC,aAAC,EAAqC7B,UAQxB,OAAhBqE,QAAgB,IAAhBA,GAAA,UAAAA,EAAkBG,mBAAlB,eAA+B3C,OAAQ,IACvCzB,KAAI,SAACoE,GAAD,OACJ,kBAAC,EAAD,CACEP,IAAG,OAAEO,QAAF,IAAEA,OAAF,EAAEA,EAAaP,IAClBE,SAAQ,OAAEK,QAAF,IAAEA,OAAF,EAAEA,EAAaL,SACvB1D,KAAI,OAAE+D,QAAF,IAAEA,OAAF,EAAEA,EAAa/D,KACnBkD,MAAK,OAAEa,QAAF,IAAEA,OAAF,EAAEA,EAAab,MACpB/D,MAAK,OAAE4E,QAAF,IAAEA,OAAF,EAAEA,EAAa5E,WAbpB,kBAAC,IAAD,CAAOuC,EAAG,EAAGsC,GAAI,EAAGC,GAAI,EAAGtC,OAAO,OAAlC,8BA0BwBuC,QCpC1BC,EAAsB,SAACnD,GAAD,OAC1B,kBAAC,IAAD,CAAMQ,eAAe,UACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAS3B,SAAU,EAAGgE,GAAI,EAAG/D,GAAI,EAAGC,UAAU,UAA9C,2BAGA,kBAAC,EAAD,MACA,kBAAC,EAAD,SAKNoE,EAAK3D,aAAe,GAEL2D,QCfTC,EAA0B,SAACpD,GAAD,OAC9B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqD,KAAK,KACV,kBAAC,EAAD,UAMRD,EAAO5D,aAAe,GAEP4D,Q,QChBA,iBACVE,K,gDCUCC,EACG,2BADHA,EAEE,iCAGFC,EAAS,IAAIC,IAAa,CAG9BC,KAAMC,IAAWC,KAAK,CACpBC,aAAQ,YAAsC,IAAnCC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aACpBD,GACFA,EAAcE,SAAQ,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAWb,EAAvB,EAAuBA,KAAvB,OACpBc,QAAQC,IAAR,oCAC+BH,EAD/B,uBACqDC,EADrD,mBACyEb,OAGzEU,GAAcI,QAAQC,IAAR,2BAAgCL,OAEpD,IAAIM,IAAS,CACXC,IAAI,WAAD,OAAaf,EAAb,+BAA+CA,OAItDgB,MAAO,IAAIC,MC5Bb,IAAMC,EAAoB,SAACzE,GAAD,OACxB,kBAAC,IAAD,CAAe0E,MAAOA,GACpB,kBAAC,EAAD,QAIJD,EAAIjF,aAAe,GAEJmF,ID6BbF,EC7BaE,WD6BbF,EC7BwBA,ED+BjB,SAACvG,GAAD,OACL,kBAAC,IAAD,CAAgBsF,OAAQA,GACtB,kBAACiB,EAAQvG,O,6EErCK0G,QACW,cAA7BhE,OAAOiE,SAASC,UAEe,UAA7BlE,OAAOiE,SAASC,UAEhBlE,OAAOiE,SAASC,SAASC,MACvB,2D,oBCdNC,IAAQC,WAAW,kBACnBD,IAAQE,SAAR,UAAoBtE,OAAOiE,SAASM,UAApC,OAA+CvE,OAAOiE,SAASO,SAI/D,IAEeX,EAFiB,SAACvG,GAAD,OAAW,kBAAC,WAAaA,ICJzDmH,IAASC,OAAO,kBAAC,EAAD,MAASxE,SAASyE,eAAe,SFoI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,iB","file":"static/js/main.12b148dc.chunk.js","sourcesContent":["import './usaMap.css';\nimport React, { FC } from 'react';\nimport { Grid, Flex, Heading, Dialog, Box, Text } from '@primer/components';\nimport {\n  SchoolsData,\n  Maybe,\n  SchoolsActivitiesInfo\n} from '../../generated/apollo';\n\nexport interface StateModalProps {\n  isOpen?: boolean;\n  onDismiss?: () => any;\n  schoolsByState?: Maybe<SchoolsData>[];\n  state?: string;\n}\n\nconst StateModal: FC<StateModalProps> = (props: StateModalProps) => {\n  function renderActivities(\n    activitiesInfo: Maybe<Maybe<SchoolsActivitiesInfo>[]>\n  ) {\n    return activitiesInfo?.map((activityInfo: Maybe<SchoolsActivitiesInfo>) => (\n      <Text mb={4}>\n        <Text fontStyle=\"italic\">{activityInfo?.activity?.name}: </Text>\n        {activityInfo?.details}\n      </Text>\n    ));\n  }\n\n  function renderSchools() {\n    return props.schoolsByState?.map((school: Maybe<SchoolsData>) => (\n      <Flex>\n        <Grid>\n          <Heading fontSize={2} mb={4} textAlign=\"center\">\n            {school?.name}\n          </Heading>\n          {renderActivities(school?.activities_info || [])}\n          <Box mb={5} />\n        </Grid>\n      </Flex>\n    ));\n  }\n\n  return (\n    <Dialog\n      title={props.state!}\n      isOpen={!!props.schoolsByState?.length}\n      onDismiss={props.onDismiss!}\n    >\n      <Box p={3}>\n        <Text fontFamily=\"sans-serif\">{renderSchools()}</Text>\n      </Box>\n    </Dialog>\n  );\n};\n\nStateModal.defaultProps = {\n  isOpen: false,\n  onDismiss: () => {},\n  schoolsByState: [],\n  state: ''\n};\n\nexport default StateModal;\n","/* tslint:disable */\n/* eslint-disable */\n\n// ====================================================\n// Documents\n// ====================================================\n\nexport type ContributorsVariables = {};\n\nexport type ContributorsQuery = {\n  __typename?: 'Query';\n\n  contributor: Maybe<ContributorsContributor>;\n};\n\nexport type ContributorsContributor = {\n  __typename?: 'Contributors';\n\n  data: Maybe<(Maybe<ContributorsData>)[]>;\n};\n\nexport type ContributorsData = {\n  __typename?: 'Contributor';\n\n  bio: Maybe<string>;\n\n  homepage: Maybe<string>;\n\n  name: string;\n\n  photo: Maybe<string>;\n\n  title: Maybe<string>;\n};\n\nexport type SchoolsVariables = {};\n\nexport type SchoolsQuery = {\n  __typename?: 'Query';\n\n  school: Maybe<SchoolsSchool>;\n};\n\nexport type SchoolsSchool = {\n  __typename?: 'Schools';\n\n  data: Maybe<(Maybe<SchoolsData>)[]>;\n};\n\nexport type SchoolsData = {\n  __typename?: 'School';\n\n  name: Maybe<string>;\n\n  state: Maybe<string>;\n\n  activities_info: Maybe<(Maybe<SchoolsActivitiesInfo>)[]>;\n};\n\nexport type SchoolsActivitiesInfo = {\n  __typename?: 'ActivitiesInfo';\n\n  activity: Maybe<SchoolsActivity>;\n\n  details: Maybe<string>;\n};\n\nexport type SchoolsActivity = {\n  __typename?: 'Activity';\n\n  name: Maybe<string>;\n};\n\nexport type Maybe<T> = T | null;\n\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport * as ReactApollo from 'react-apollo';\nimport * as ReactApolloHooks from 'react-apollo-hooks';\n\n// ====================================================\n// Components\n// ====================================================\n\nexport const ContributorsDocument = gql`\n  query contributors {\n    contributor {\n      data {\n        bio\n        homepage\n        name\n        photo\n        title\n      }\n    }\n  }\n`;\nexport class ContributorsComponent extends React.Component<\n  Partial<ReactApollo.QueryProps<ContributorsQuery, ContributorsVariables>>\n> {\n  render() {\n    return (\n      <ReactApollo.Query<ContributorsQuery, ContributorsVariables>\n        query={ContributorsDocument}\n        {...(this as any)['props'] as any}\n      />\n    );\n  }\n}\nexport type ContributorsProps<TChildProps = any> = Partial<\n  ReactApollo.DataProps<ContributorsQuery, ContributorsVariables>\n> &\n  TChildProps;\nexport function ContributorsHOC<TProps, TChildProps = any>(\n  operationOptions:\n    | ReactApollo.OperationOption<\n        TProps,\n        ContributorsQuery,\n        ContributorsVariables,\n        ContributorsProps<TChildProps>\n      >\n    | undefined\n) {\n  return ReactApollo.graphql<\n    TProps,\n    ContributorsQuery,\n    ContributorsVariables,\n    ContributorsProps<TChildProps>\n  >(ContributorsDocument, operationOptions);\n}\nexport function useContributors(\n  baseOptions?: ReactApolloHooks.QueryHookOptions<ContributorsVariables>\n) {\n  return ReactApolloHooks.useQuery<ContributorsQuery, ContributorsVariables>(\n    ContributorsDocument,\n    baseOptions\n  );\n}\nexport const SchoolsDocument = gql`\n  query schools {\n    school {\n      data {\n        name\n        state\n        activities_info {\n          activity {\n            name\n          }\n          details\n        }\n      }\n    }\n  }\n`;\nexport class SchoolsComponent extends React.Component<\n  Partial<ReactApollo.QueryProps<SchoolsQuery, SchoolsVariables>>\n> {\n  render() {\n    return (\n      <ReactApollo.Query<SchoolsQuery, SchoolsVariables>\n        query={SchoolsDocument}\n        {...(this as any)['props'] as any}\n      />\n    );\n  }\n}\nexport type SchoolsProps<TChildProps = any> = Partial<\n  ReactApollo.DataProps<SchoolsQuery, SchoolsVariables>\n> &\n  TChildProps;\nexport function SchoolsHOC<TProps, TChildProps = any>(\n  operationOptions:\n    | ReactApollo.OperationOption<\n        TProps,\n        SchoolsQuery,\n        SchoolsVariables,\n        SchoolsProps<TChildProps>\n      >\n    | undefined\n) {\n  return ReactApollo.graphql<\n    TProps,\n    SchoolsQuery,\n    SchoolsVariables,\n    SchoolsProps<TChildProps>\n  >(SchoolsDocument, operationOptions);\n}\nexport function useSchools(\n  baseOptions?: ReactApolloHooks.QueryHookOptions<SchoolsVariables>\n) {\n  return ReactApolloHooks.useQuery<SchoolsQuery, SchoolsVariables>(\n    SchoolsDocument,\n    baseOptions\n  );\n}\n","import './usaMap.css';\nimport ColorHash from 'color-hash';\nimport React, { FC, useState } from 'react';\nimport ReactUsaMap, { Customize, StatesCustomize } from 'react-usa-map';\nimport { Box, Flex, Grid, Flash } from '@primer/components';\nimport StateModal from './StateModel';\nimport { useSchools, SchoolsData, Maybe } from '../../generated/apollo';\n\nconst colorHash = new ColorHash();\n\nexport interface UsaMapProps {}\n\nconst UsaMap: FC<UsaMapProps> = (_props: UsaMapProps) => {\n  const schoolsData = useSchools().data;\n  const [schoolsByState, setSchoolsByState] = useState<\n    Maybe<SchoolsData>[] | null\n  >(null);\n  const [state, setState] = useState('');\n\n  function handleClick(e: any) {\n    if (!schoolsData) return null;\n    const schools =\n      schoolsData.school?.data?.filter(\n        (school: Maybe<SchoolsData>) => school?.state === e.target.dataset.name\n      ) || null;\n    setSchoolsByState(schools);\n    setState(e.target.dataset.name);\n  }\n\n  function getCustomize(): StatesCustomize {\n    if (!schoolsData) return {};\n    return (schoolsData?.school?.data || []).reduce(\n      (customize: StatesCustomize, school: Maybe<SchoolsData>) => {\n        customize[school?.state || ''] = {\n          fill: colorHash.hex(JSON.stringify(school))\n        } as Customize;\n        return customize;\n      },\n      {}\n    );\n  }\n\n  return (\n    <>\n      <Flex justifyContent=\"center\">\n        <Grid width={150}>\n          <Flash\n            m={0}\n            scheme={schoolsData?.school?.data?.length ? 'green' : 'red'}\n          >\n            {schoolsData?.school?.data?.length\n              ? 'Choose your state'\n              : 'Loading data . . .'}\n          </Flash>\n        </Grid>\n      </Flex>\n      <ReactUsaMap\n        width={\n          window.innerWidth ||\n          document.documentElement.clientWidth ||\n          document.body.clientWidth\n        }\n        customize={getCustomize()}\n        onClick={handleClick}\n      />\n      <StateModal\n        isOpen={!!schoolsByState?.length}\n        onDismiss={() => setSchoolsByState(null)}\n        schoolsByState={schoolsByState || []}\n        state={state || ''}\n      />\n      <Box mb={8} />\n    </>\n  );\n};\n\nUsaMap.defaultProps = {};\n\nexport default UsaMap;\n","import React, { FC } from 'react';\nimport { Box, Flex, Heading, Text, Link } from '@primer/components';\n\nexport interface ContributorProps {\n  bio?: string;\n  homepage?: string;\n  name: string;\n  photo?: string;\n  title?: string;\n}\n\nconst Contributor: FC<ContributorProps> = (props: ContributorProps) => {\n  function renderPhoto() {\n    if (!props.photo) return null;\n    return (\n      <Flex justifyContent=\"center\" mb={20}>\n        <img\n          src={props.photo}\n          style={{ borderRadius: '100%', maxWidth: 140, maxHeight: 140 }}\n        />\n      </Flex>\n    );\n  }\n\n  return (\n    <Box mb={60} ml={3} mr={3}>\n      {renderPhoto()}\n      <Heading textAlign=\"center\" fontSize={3} mb={2}>\n        {props.name}\n      </Heading>\n      <Heading textAlign=\"center\" fontSize={2} mb={2}>\n        {props.title}\n      </Heading>\n      <Text textAlign=\"center\">\n        <Text>{props.bio}</Text>\n        <Box mb={2} />\n        <Link href={props.homepage} target=\"_blank\" mb={2}>\n          <Heading fontSize={1} textAlign=\"center\">\n            {props.homepage}\n          </Heading>\n        </Link>\n      </Text>\n    </Box>\n  );\n};\n\nContributor.defaultProps = {\n  bio: '',\n  homepage: '',\n  photo: '',\n  title: ''\n};\n\nexport default Contributor;\n","import React, { FC } from 'react';\nimport { Flash, Heading, Grid, Flex } from '@primer/components';\nimport Contributor from './contributors/Contributor';\nimport {\n  ContributorsData,\n  useContributors,\n  Maybe\n} from '../../generated/apollo';\n\nexport interface ContributorsProps {}\n\nconst Contributors: FC<ContributorsProps> = (_props: ContributorsProps) => {\n  const contributorsData = useContributors().data;\n\n  function renderContributors() {\n    if (!contributorsData?.contributor?.data?.length) {\n      return (\n        <Flash m={0} pl={3} pr={3} scheme=\"red\">\n          Loading contributors . . .\n        </Flash>\n      );\n    }\n    return (\n      contributorsData?.contributor?.data || []\n    ).map((contributor: Maybe<ContributorsData>) => (\n      <Contributor\n        bio={contributor?.bio!}\n        homepage={contributor?.homepage!}\n        name={contributor?.name!}\n        photo={contributor?.photo!}\n        title={contributor?.title!}\n      />\n    ));\n  }\n\n  return (\n    <Flex justifyContent=\"center\">\n      <Grid>\n        <Heading fontSize={5} mt={4} mb={6} textAlign=\"center\">\n          Contributors\n        </Heading>\n\n        <Flex justifyContent=\"center\" flexWrap=\"wrap\" mb={8}>\n          <Grid maxWidth={400}>{renderContributors()}</Grid>\n        </Flex>\n      </Grid>\n    </Flex>\n  );\n};\n\nexport default Contributors;\n","import React, { FC } from 'react';\nimport { Flex, Heading, Grid } from '@primer/components';\nimport UsaMap from './home/UsaMap';\nimport Contributors from './home/Contributors';\n\nexport interface HomeProps {}\n\nconst Home: FC<HomeProps> = (_props: HomeProps) => (\n  <Flex justifyContent=\"center\">\n    <Grid>\n      <Heading fontSize={6} mt={6} mb={8} textAlign=\"center\">\n        Public Health Coalition\n      </Heading>\n      <UsaMap />\n      <Contributors />\n    </Grid>\n  </Flex>\n);\n\nHome.defaultProps = {};\n\nexport default Home;\n","import React, { FC } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './Home';\n\nexport interface RoutesProps {}\n\nconst Routes: FC<RoutesProps> = (_props: RoutesProps) => (\n  <Router>\n    <Switch>\n      <Route path=\"/\">\n        <Home />\n      </Route>\n    </Switch>\n  </Router>\n);\n\nRoutes.defaultProps = {};\n\nexport default Routes;\n","import { theme as primer } from '@primer/components';\n\nexport default {\n  ...primer\n};\n","import React, { Component, FC } from 'react';\n/* import gql from 'graphql-tag'; */\nimport { ApolloClient } from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { onError } from 'apollo-link-error';\n/* import schema from './schema'; */\n/* import resolvers, { data } from './resolvers'; */\nimport { ApolloProvider } from 'react-apollo-hooks';\n\n/* const typeDefs = gql(schema); */\n\nconst config = {\n  token: '3xavljei8dw1avPyGUqAMexj',\n  host: 'data.publichealthcoalition.org'\n};\n\nconst client = new ApolloClient({\n  /* resolvers, */\n  /* typeDefs, */\n  link: ApolloLink.from([\n    onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors)\n        graphQLErrors.forEach(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n          )\n        );\n      if (networkError) console.log(`[Network error]: ${networkError}`);\n    }),\n    new HttpLink({\n      uri: `https://${config.host}/_/gql?access_token=${config.token}`\n      /* credentials: 'same-origin' */\n    })\n  ]),\n  cache: new InMemoryCache()\n});\n/* client.writeData({ data }); */\n\nexport interface UnknownProps {\n  [key: string]: any;\n}\n\nexport default function withApollo<Props = any>(\n  App: FC<Props> | typeof Component\n): FC<Props> | typeof Component {\n  return (props: any) => (\n    <ApolloProvider client={client}>\n      <App {...props} />\n    </ApolloProvider>\n  );\n}\n","import React, { FC } from 'react';\nimport { ThemeProvider } from 'emotion-theming';\nimport Routes from './routes';\nimport theme from './theme';\nimport withApollo from './withApollo';\n\nexport interface AppProps {}\n\nconst App: FC<AppProps> = (_props: AppProps) => (\n  <ThemeProvider theme={theme}>\n    <Routes />\n  </ThemeProvider>\n);\n\nApp.defaultProps = {};\n\nexport default withApollo(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\nimport { Reactant } from '@reactant/web';\n\nReactGA.initialize('UA-161712632-1');\nReactGA.pageview(`${window.location.pathname}${window.location.search}`);\n\nexport interface AppProps {}\n\nconst App: React.FC<AppProps> = (props) => <Reactant {...props} />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}